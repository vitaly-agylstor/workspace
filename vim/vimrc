" enable Pathogen - vim bundle manager
execute pathogen#infect()

" Vundle settings
" -----------------------------------------------------------------------------

set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'

" The bundles you install will be listed here
Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Bundle 'tpope/vim-fugitive'
Bundle 'klen/python-mode'
Bundle 'davidhalter/jedi-vim'
Bundle 'xolox/vim-misc'
Bundle 'xolox/vim-session'
Bundle 'wesQ3/vim-windowswap'
Bundle 'majutsushi/tagbar'
Bundle 'jiangmiao/auto-pairs'
Bundle 'yegappan/grep'
Bundle 'kien/ctrlp.vim'
Bundle 'jistr/vim-nerdtree-tabs'
Bundle 'scrooloose/nerdtree'

filetype plugin indent on

" -----------------------------------------------------------------------------
" my settings

" enable syntax highlighting
syntax enable

" show line numbers
set number

" set tabs to have 4 spaces
set ts=4

" indent when moving to the next line while writing code
set autoindent

" when using the >> or << commands, shift line by 4 spaces
set shiftwidth=4

" show a visual line under the cursor's current line
set cursorline
:hi CursorLine cterm=NONE ctermbg=Cyan guifg=white guibg=Grey

" enable all Python syntax highlighting features
let python_highlight_all = 1

" change registers size up to 1000 lines
set viminfo='20,<1000

" make cursor centralized
set so=999

" remove a word under cursor and switch to insert mode
" noremap <C-d> <C-[>diwi
" vnoremap <C-d> <C-[>diwi
" inoremap <C-d> <C-[>diwi

" Shortcut to activate NerdTree - F2
map <F2> :NERDTreeTabsToggle<CR>

" Shortcut to make PymodeRun
map <F5> :PymodeRun<CR>

" Map leader key
let mapleader=","

set softtabstop=4
set expandtab
set hlsearch
set ruler "status bar with cursor position
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
set nowrap
set clipboard=unnamed

" Bind nohl
" Removes highlight of your last search
" Press 'control-n' to hide highlight
noremap <C-n> :nohl<CR>
vnoremap <C-n> :nohl<CR>
inoremap <C-n> :nohl<CR>

" Quit command
" Hit \e to quit
" and \E to quit without saving
noremap <Leader>e :quit<CR> " Just quit
noremap <Leader>E :q!<CR>   " Quit without saving

" Maps for tab manipulation
" nnoremap <C-Left> :tabprevious<CR>
" nnoremap <C-Right> :tabnext<CR>
" nnoremap <silent> <A-Left> :execute 'silent! tabmove ' . (tabpagenr()-2)<CR>
" nnoremap <silent> <A-Right> :execute 'silent! tabmove ' . tabpagenr()<CR>
" Control-Left: prev tab
" Control-Right: next tab
" Alt-Left: move the current tab to the left
" Alt-Right: move the current tab to the right


let python_hightlight_all = 1
highlight LineNr ctermfg=DarkGrey

" Mapping quick replace combination
" Press <Leader>s to replace current word
:nnoremap <Leader>s :%s/\<<C-r><C-w>\>//g<Left><Left>

" Map tab key to chage window
set autochdir
map <Tab> <C-W>W:cd %:p:h<CR>:<CR>

" Using <space> to fold/unfold
nnoremap <space> za
vnoremap <space> zf

" Map F8 key to toggle the Tagbar window
nmap <F8> :TagbarToggle<CR>

" Map F3 to grep
nnoremap <silent> <F3> :Rgrep<CR>

" Map <leader>f to find the current file in NERDTree
map <leader>f :NERDTreeFind<CR>

" Map <leader>q to close current tab
map <leader>q :tabclose<CR>

" Map <leader>t to open a new tab
map <leader>t :tabe<CR>

" Map <leader>w close current window
map <leader>w :quit<CR>

" -----------------------------------------------------------------------------
" Highlight a line if it excess 80 characters
" augroup vimrc_autocmds
"     autocmd!
"     " highlight characters past column 80
"     autocmd FileType python highlight Excess ctermbg=DarkGrey guibg=Black
"     autocmd FileType python match Excess /\%80v.*/
"     autocmd FileType python set nowrap
"     augroup END

" Powerline setup
set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 9
set laststatus=2

" -----------------------------------------------------------------------------
"
" Python-mode
" Activate rope
" Keys:
" K             Show python docs
" <Ctrl-Space>  Rope autocomplete
" <Ctrl-c>g     Rope goto definition
" <Ctrl-c>d     Rope show documentation
" <Ctrl-c>f     Rope find occurrences
" <Leader>b     Set, unset breakpoint (g:pymode_breakpoint enabled)
" [[            Jump on previous class or function (normal, visual, operator modes)
" ]]            Jump on next class or function (normal, visual, operator modes)
" [M            Jump on previous class or method (normal, visual, operator modes)
" ]M            Jump on next class or method (normal, visual, operator modes)
let g:pymode_rope = 1

" Documentation
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'

" Enable Run script
let g:pymode_run = 1

" Linting
let g:pymode_lint = 1
let g:pymode_lint_checker = "pyflakes,pep8"
" Auto check on save
let g:pymode_lint_write = 1

" Support virtualenv
let g:pymode_virtualenv = 1

" Enable breakpoints plugin
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_bind = '<leader>b'

" syntax highlighting
let g:pymode_syntax = 1
let g:pymode_syntax_all = 1
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all

" Don't autofold code
let g:pymode_folding = 0


" -----------------------------------------------------------------------------
"
" Enable Mouse usage
" vim:fdm=marker

" Editor basics {{{
" Behave like Vim instead of Vi
set nocompatible

" Show a status line
set laststatus=2

" Show the current cursor position
set ruler

" Enable syntax highlighting
syn on
" }}}
" Mouse {{{
" Send more characters for redraws
set ttyfast

" Enable mouse use in all modes
set mouse=a

" Set this to the name of your terminal that supports mouse codes.
" Must be one of: xterm, xterm2, netterm, dec, jsbterm, pterm
set ttymouse=xterm2
" }}}
" Disable arrow keys {{{
noremap  <Up>     <NOP>
inoremap <Down>   <NOP>
inoremap <Left>   <NOP>
inoremap <Right>  <NOP>
noremap  <Up>     <NOP>
noremap  <Down>   <NOP>
noremap  <Left>   <NOP>
noremap  <Right>  <NOP>
" }}}


" -----------------------------------------------------------------------------
"  Enable cursor line only for active window

augroup BgHighlight
    autocmd!
    autocmd WinEnter * set cursorline
    autocmd WinLeave * set nocursorline
augroup END


" -----------------------------------------------------------------------------
" Changing color of number column
highlight LineNr ctermfg=245 ctermbg=254


" -----------------------------------------------------------------------------
" Get rid of '|' symbol in window separator
:set fillchars+=vert:\ 


" -----------------------------------------------------------------------------
" Make tilde symbol 'invisible'
:highlight NonText ctermfg=white


" -----------------------------------------------------------------------------
" Useful shortcuts
" :map <C-a> GVgg
" :map <C-n> :enew
" :map <C-o> :e . <Enter>
" :map <C-s> :w <Enter>
" :map <C-c> y
" :map <C-v> p
" :map <C-x> d
" :map <C-z> u
" :map <C-t> :tabnew <Enter>
" :map <C-i> >>
" :map <C-w> :close <Enter>
" :map <C-W> :q! <Enter>
" :map <C-f> /
" :map <F3> n
" :map <C-h> :%s/
" :map <S-t> vat
" :map <S-T> vit
" :map <S-{> vi{
" :map <S-(> vi(
" :map <S-[> vi[

" Explanation
" Ctrl + a --> Select All
" Ctrl + n --> New File (Also See Ctrl + t)
" Ctrl + o --> Open File (Opens current folder to browse)
" Ctrl + s --> Save File
" Ctrl + c --> Copy
" Ctrl + v --> Paste
" Ctrl + x --> Cut
" Ctrl + z --> Undo
" Ctrl + r --> Redo
" Ctrl + t --> Open new tab
" Tab --> Indent
" Ctrl + w --> Close (tab)
" Ctrl + W --> Force close (Quit)
" Ctrl + f --> Find
" F3 --> Find Next
" Ctrl + h --> Replace All
" Shift + t --> Select (HTML, XML etc.) tag (inclusive)
" Shift + T --> Select (HTML, XML etc.) tag (exclusive)
" Shift + { --> Select text between flower brackets
" Shift + [ --> Select text between square brackets
" Shift + ( --> Select text between parentheses
" -----------------------------------------------------------------------------

" ignore *.pyc files in NERDTree
let NERDTreeIgnore = ['\.pyc$']

" ctrlp configuration
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe  " Windows
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'

